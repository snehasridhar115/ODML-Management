{"version":3,"sources":["Userhome.js","Login.js","Register.js","AddEvent.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["Userhome","deleteEvent","id","opts","axios","post","then","res","console","log","data","success","removeEvent","catch","error","templist","state","eventslist","map","event","e_id","setState","addEvent","window","location","replace","userid","get","uid","events","class","this","className","e_type","e_time","e_date","e_venue","onClick","React","Component","Login","handleChange","preventDefault","target","name","value","handleSubmit","UserName","Password","isLoggedin","onSubmit","type","placeholder","onChange","href","Register","fname","sname","num","eid","passwd","AddEvent","Name","date","time","venue","startDate","Date","noValidate","Header","App","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8aAmGeA,G,mBA9FX,aACC,IAAD,8BACI,+CAuBJC,YAAc,SAACC,GACX,IAAIC,EAAK,CACL,GAAKD,GAETE,IAAMC,KAAK,qCAAqCF,GAClDG,KAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZC,QAAQC,IAAIF,EAAIG,OACW,IAAnBH,EAAIG,KAAKC,SACR,EAAKC,YAAYV,KAEzBW,MAAM,SAAAC,GACPN,QAAQC,IAAIK,MApCf,EAwCAF,YAAc,SAACV,GACX,IAAMa,EAAW,EAAKC,MAAMC,WAC5BF,EAASG,IAAI,SAACC,GACPA,EAAMC,OAASlB,IACdiB,EAAMC,MAAQ,KAGtB,EAAKC,SAAS,CACVJ,WAAYF,KAhDpB,EAoDAO,SAAW,WACPC,OAAOC,SAASC,QAAQ,mCAnD3B,EAAKT,MAAM,CACJU,OAAQ,KACdT,WAAY,IAJd,E,iFAQqB,IAAD,OAChBb,IAAMuB,IAAN,kCACGrB,KAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZC,QAAQC,IAAIF,EAAIG,MAChB,IAAMA,EAAOH,EAAIG,MACC,IAAfA,EAAKC,SACJ,EAAKU,SAAS,CACVK,OAAQhB,EAAKkB,IACbX,WAAYP,EAAKmB,WAExBhB,MAAM,SAAAC,GACLN,QAAQC,IAAIK,O,+BAoCrB,IAAD,OACI,OACI,yBAAKgB,MAAM,aACP,wCAAcC,KAAKf,MAAMU,QACzB,2BAAOM,UAAU,SACb,+BACI,4BACI,wCACA,oCACA,oCACA,oCACA,sCACA,+BAIR,+BACKD,KAAKf,MAAMC,WAAWC,IAAI,SAACC,GACxB,IAAoB,IAAhBA,EAAMC,KAAc,OACvB,4BACI,4BAAKD,EAAMC,MACX,4BAAKD,EAAMc,QACX,4BAAKd,EAAMe,QACX,4BAAKf,EAAMgB,QACX,4BAAKhB,EAAMiB,SACX,4BAAI,4BAAQN,MAAM,SAASO,QAAW,kBAAM,EAAKpC,YAAYkB,EAAMC,QAA/D,sBAMrB,4BAAQU,MAAM,SAASO,QAAWN,KAAKT,UAAvC,sB,GAzFOgB,IAAMC,YCoEdC,E,YA3Db,aAAe,IAAD,8BACZ,+CASJC,aAAe,SAACtB,GACfA,EAAMuB,iBADmB,MAEGvB,EAAMwB,OAAtBC,EAFa,EAEbA,KAAMC,EAFO,EAEPA,MAClBrC,QAAQC,IAAImC,GACZ,EAAKvB,SAAL,eAAgBuB,EAAOC,KAdR,EAgBhBC,aAAe,SAAC3B,GACfA,EAAMuB,iBACN,IAAIvC,EAAK,CACL,GAAK,EAAKa,MAAM+B,SAChB,OAAS,EAAK/B,MAAMgC,UAGxBxC,QAAQC,IAAIN,EAAKD,IACjBE,IAAMC,KAAK,8BAA8BF,GACpCG,KAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZC,QAAQC,IAAIF,EAAIG,OACC,IAAnBH,EAAIG,KAAKC,UAEX,EAAKU,SAAS,CAAC4B,YAAY,IAC3B1B,OAAOC,SAASC,QAAQ,qCAEnBZ,MAAM,SAAAC,GACX,EAAKO,SAAS,CAAC4B,YAAY,IAEtBzC,QAAQC,IAAIK,MAlCnB,EAAKE,MAAM,CACV+B,SAAU,KACVC,SAAU,KACVC,YAAY,GALE,E,sEAwCd,OACD,0BAAMC,SAAUnB,KAAKe,cACpB,yBAAKhB,MAAM,aACV,wBAAIA,MAAM,WAAV,UAED,yBAAKA,MAAM,aACV,2BAAOqB,KAAK,OAAOrB,MAAM,WAAWsB,YAAY,WAAWR,KAAK,WAAYS,SAAUtB,KAAKU,eAC3F,6BACA,2BAAOU,KAAK,WAAWrB,MAAM,WAAWsB,YAAY,WAAWR,KAAK,WAAWS,SAAUtB,KAAKU,eAC9F,6BACA,wCAAQX,MAAM,UAAd,QAA6B,UAA7B,WACA,6BACA,uBAAGA,MAAM,WAAWwB,KAAK,kCAAzB,iC,GAtDiBhB,IAAMC,WCwEXgB,G,mBA5Eb,aAAe,IAAD,8BACZ,+CAUJd,aAAe,SAACtB,GACfA,EAAMuB,iBADmB,MAEGvB,EAAMwB,OAAtBC,EAFa,EAEbA,KAAMC,EAFO,EAEPA,MAClBrC,QAAQC,IAAImC,GACZ,EAAKvB,SAAL,eAAgBuB,EAAOC,KAfR,EAiBhBC,aAAe,SAAC3B,GACfA,EAAMuB,iBACN,IAAIvC,EAAK,CACT,MAAQ,EAAKa,MAAMwC,MACnB,MAAQ,EAAKxC,MAAMyC,MACnB,IAAM,EAAKzC,MAAM0C,IACjB,IAAM,EAAK1C,MAAM2C,IACjB,IAAM,EAAK3C,MAAMY,IACjB,OAAS,EAAKZ,MAAM4C,QAEpBpD,QAAQC,IAAIN,GACZC,IAAMC,KAAK,iCAAiCF,GACvCG,KAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZC,QAAQC,IAAIF,EAAIG,MACD,GAAlBH,EAAIG,KAAKC,SACXY,OAAOC,SAASC,QAAQ,iCAClBZ,MAAM,SAAAC,GACPN,QAAQC,IAAIK,MAjCf,EAAKE,MAAQ,CACXwC,MAAO,KACPC,MAAO,KACPC,IAAK,KACLC,IAAK,KACL/B,IAAK,KACLgC,OAAQ,MARE,E,sEAwCd,OACE,6BACA,yBAAK9B,MAAM,aACT,wBAAIA,MAAM,WAAV,sBAEF,0BAAMA,MAAM,YAAYoB,SAAUnB,KAAKe,cACrC,yBAAKhB,MAAM,SACT,0BAAMA,MAAM,SAAZ,UACA,2BAAOA,MAAM,QAAQc,KAAK,QAAQQ,YAAY,aAAaC,SAAUtB,KAAKU,eAC1E,2BAAOX,MAAM,QAAQc,KAAK,QAAQQ,YAAY,YAAYC,SAAUtB,KAAKU,gBAE3E,yBAAKX,MAAM,SACT,0BAAMA,MAAM,SAAZ,kBACA,2BAAOA,MAAM,QAAQc,KAAK,MAAMS,SAAUtB,KAAKU,gBAEjD,yBAAKX,MAAM,SACT,0BAAMA,MAAM,SAAZ,cACA,2BAAOA,MAAM,QAAQc,KAAK,MAAMS,SAAUtB,KAAKU,gBAEjD,yBAAKX,MAAM,SACT,0BAAMA,MAAM,SAAZ,eACA,2BAAOA,MAAM,QAAQc,KAAK,MAAMS,SAAUtB,KAAKU,gBAEjD,yBAAKX,MAAM,SACT,0BAAMA,MAAM,SAAZ,cACA,2BAAOA,MAAM,QAAQc,KAAK,SAASS,SAAUtB,KAAKU,gBAEpD,yBAAKX,MAAM,SACT,4BAAQA,MAAM,UAAd,mB,GAtEeQ,IAAMC,YCmGdsB,G,0BAhGX,aAAe,IAAD,8BACZ,+CAYFpB,aAAa,SAACtB,GACVA,EAAMuB,iBADc,MAEIvB,EAAMwB,OAAtBC,EAFY,EAEZA,KAAMC,EAFM,EAENA,MACdrC,QAAQC,IAAImC,GACZ,EAAKvB,SAAL,eAAgBuB,EAAOC,KAjBb,EAmBdC,aAAa,SAAC3B,GACVA,EAAMuB,iBACN,IAAIvC,EAAK,CACT,KAAO,EAAKa,MAAM8C,KAClB,KAAO,EAAK9C,MAAM+C,KAClB,KAAO,EAAK/C,MAAMgD,KAClB,MAAQ,EAAKhD,MAAMiD,MACnB,IAAM,EAAKjD,MAAMY,KAEjBpB,QAAQC,IAAIN,GACZC,IAAMC,KAAK,iCAAiCF,GACvCG,KAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZC,QAAQC,IAAIF,EAAIG,MACD,GAAlBH,EAAIG,KAAKC,QACVY,OAAOC,SAASC,QAAQ,kCAExB,EAAKJ,SAAS,CACZP,OAAO,MAEJD,MAAM,SAAAC,GACPN,QAAQC,IAAIK,MAtCpB,EAAKE,MAAQ,CACXF,OAAO,EACPoD,UAAW,IAAIC,KACfL,KAAM,KACNE,KAAM,KACNC,MAAO,KACPrC,IAAK,MARK,E,sEA4CJ,IAAD,QACT,OACI,6BACI,yBAAKE,MAAM,aACT,wBAAIA,MAAM,WAAV,kBAGF,0BAAMA,MAAM,YAAYoB,SAAUnB,KAAKe,aAAcsB,YAAU,GAO3D,yBAAKtC,MAAM,SACX,0BAAMA,MAAM,SAAZ,gBACA,8BAAOA,MAAM,SAAb,sBAA2B,QAA3B,qBAAuC,QAAvC,yBAAyDC,KAAKU,cAA9D,kCAGA,yBAAKX,MAAM,SACX,0BAAMA,MAAM,SAAZ,UAQA,8BAAOA,MAAM,SAAb,sBAA2B,QAA3B,qBAAuC,QAAvC,yBAAwDC,KAAKU,cAA7D,kCAGA,yBAAKX,MAAM,SACX,0BAAMA,MAAM,SAAZ,eACA,8BAAOA,MAAM,SAAb,sBAA2B,QAA3B,qBAAuC,QAAvC,yBAAwDC,KAAKU,cAA7D,kCAGA,yBAAKX,MAAM,SACX,0BAAMA,MAAM,SAAZ,wBACA,8BAAOA,MAAM,SAAb,sBAA2B,SAA3B,qBAAwC,SAAxC,yBAA2DC,KAAKU,cAAhE,kCAGA,yBAAKX,MAAM,SACX,wCAAQA,MAAM,UAAd,QAA6B,UAA7B,WAECC,KAAKf,MAAMF,OAAS,yBAAKgB,MAAM,SAAX,uF,GA1FdQ,IAAMC,Y,OCKd8B,MARf,WACI,OACI,yBAAKvC,MAAM,UACP,wBAAIA,MAAM,WAAV,6B,0BCoBGwC,MAjBf,WAEC,OACA,6BACC,kBAAC,EAAD,MACA,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,KAAK,SAASC,UAAWhC,IAChC,kBAAC,IAAD,CAAO+B,KAAK,YAAYC,UAAWjB,IACnC,kBAAC,IAAD,CAAOgB,KAAK,YAAYC,UAAWX,IACnC,kBAAC,IAAD,CAAOU,KAAK,YAAYC,UAAWxE,OCNlByE,QACW,cAA7BlD,OAAOC,SAASkD,UAEe,UAA7BnD,OAAOC,SAASkD,UAEhBnD,OAAOC,SAASkD,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5E,KAAK,SAAA6E,GACjCA,EAAaC,iB","file":"static/js/main.490027c3.chunk.js","sourcesContent":["import React from 'react';\nimport './Styles/Userhome.css';\nimport axios from 'axios';\n\nclass Userhome extends React.Component {\n    constructor()\n    {\n        super();\n\t    this.state={\n            userid: null,\n\t\t    eventslist: [],\n        }\n    }\n\n    componentDidMount() {\n        axios.get(`http://127.0.0.1:5000/userhome`)\n          .then(res => {\n            console.log(res);\n            console.log(res.data);\n            const data = res.data;\n            if(data.success===true)\n                this.setState({\n                    userid: data.uid,\n                    eventslist: data.events\n                });\n          }).catch(error => {\n              console.log(error);\n          })\n    }\n\n    deleteEvent = (id) => {\n        var opts={\n            \"id\":id,\n           };\n        axios.post('http://127.0.0.1:5000/delete-event',opts)\n    \t.then(res => {\n      \tconsole.log(res);\n      \tconsole.log(res.data);\n            if(res.data.success===true) {\n                this.removeEvent(id)\n            }\n    \t}).catch(error => {\n      \tconsole.log(error);\n    \t})\n    }\n\n    removeEvent = (id) => {\n        const templist = this.state.eventslist;\n        templist.map((event) => {\n            if(event.e_id === id) {\n                event.e_id = -1;\n            }\n        })\n        this.setState({\n            eventslist: templist\n        })\n    }\n\n    addEvent = () => {\n        window.location.replace('http://127.0.0.1:3000/Addevent');\n    }\n    render()\n    {\n        return (\n            <div class=\"Component\">\n                <h3>User id: {this.state.userid}</h3>\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>Entry ID</th>\n                            <th>Date</th>\n                            <th>Time</th>\n                            <th>Type</th>\n                            <th>Reason</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {this.state.eventslist.map((event) => {\n                            if (event.e_id !== -1)  return (\n                             <tr>\n                                 <td>{event.e_id}</td>\n                                 <td>{event.e_type}</td>\n                                 <td>{event.e_time}</td>\n                                 <td>{event.e_date}</td>\n                                 <td>{event.e_venue}</td>\n                                 <td><button class=\"Button\" onClick = {() => this.deleteEvent(event.e_id)}>Delete entry</button></td>\n                             </tr>\n                            )\n                        })}\n                     </tbody>\n                </table>\n                <button class=\"Button\" onClick = {this.addEvent}>Add new Entry</button>\n            </div>\n        );\n    }\n}\n\nexport default Userhome;\n","import React from 'react';\r\nimport './Styles/Login.css';\r\nimport axios from 'axios';\r\nimport Userhome from './Userhome';\r\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n// function reg() {\r\n//   return (\r\n//     <Register/ >\r\n//   );\r\n// }\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n\tthis.state={\r\n\t\tUserName: null,\r\n\t\tPassword: null,\r\n\t\tisLoggedin: false,\r\n\t\t// failed: 0\r\n\t}\r\n  }\r\n\r\nhandleChange = (event) => {\r\n\tevent.preventDefault();\r\n    \tconst { name, value } = event.target;\r\n\tconsole.log(name);\r\n\tthis.setState({[name]: value});\r\n}\r\nhandleSubmit = (event) =>{\r\n\tevent.preventDefault();\r\n\tvar opts={\r\n    \t\"id\":this.state.UserName,\r\n    \t\"passwd\":this.state.Password,\r\n   \t};\r\n\t//console.log(opts);\r\n\tconsole.log(opts.id);\r\n\taxios.post('http://localhost:5000/login',opts)\r\n    \t.then(res => {\r\n      \tconsole.log(res);\r\n      \tconsole.log(res.data);\r\n\t\tif(res.data.success===true)// && this.state.failed <3)\r\n\t\t{\r\n\t\t\tthis.setState({isLoggedin: true});\r\n\t\t\twindow.location.replace('http://localhost:3000/Userhome');\r\n\t\t}\r\n    \t}).catch(error => {\r\n\t\t\tthis.setState({isLoggedin: false});\r\n\t\t\t// this.setState({failed: this.state.failed + 1});\r\n      \t\tconsole.log(error);\r\n    \t})\r\n}\r\n  render() {\r\n  return (\r\n\t<form onSubmit={this.handleSubmit}>     \r\n\t\t<div class=\"SubHeader\">\r\n\t\t\t<h2 class=\"Heading\">Login</h2>\r\n\t\t</div>  \r\n\t\t<div class=\"Component\">\r\n\t\t\t<input type=\"text\" class=\"UserName\" placeholder=\"UserName\" name=\"UserName\"  onChange={this.handleChange} />\r\n\t\t\t<br />\r\n\t\t\t<input type=\"Password\" class=\"Password\" placeholder=\"Password\" name=\"Password\" onChange={this.handleChange} />\r\n\t\t\t<br />\r\n\t\t\t<button class=\"Button\" class=\"SignIn\">Sign In</button>\r\n\t\t\t<br />    \r\n\t\t\t<a class=\"Register\" href=\"http://localhost:3000/Register\">New User? Register Here</a>\r\n\t\t</div>\r\n    </form>\t\r\n  );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","\r\nimport React from 'react';\r\nimport './Styles/Register.css';\r\nimport axios from 'axios';\r\n\r\nclass Register extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      fname: null,\r\n      sname: null,\r\n      num: null,\r\n      eid: null,\r\n      uid: null,\r\n      passwd: null\r\n\t  }\r\n  }\r\nhandleChange = (event) => {\r\n\tevent.preventDefault();\r\n    \tconst { name, value } = event.target;\r\n\tconsole.log(name);\r\n\tthis.setState({[name]: value});\r\n}\r\nhandleSubmit = (event) =>{\r\n\tevent.preventDefault();\r\n\tvar opts={\r\n\t'fname':this.state.fname,\r\n\t'sname':this.state.sname,\r\n\t'num':this.state.num,\r\n\t'eid':this.state.eid,\r\n\t'uid':this.state.uid,\r\n\t'passwd':this.state.passwd\t\r\n\t};\r\n\tconsole.log(opts);\r\n\taxios.post('http://localhost:5000/register',opts)\r\n    \t.then(res => {\r\n      \tconsole.log(res);\r\n      \tconsole.log(res.data);\r\n\tif(res.data.success==true)\r\n\t\twindow.location.replace('http://localhost:3000/Login')\r\n    \t}).catch(error => {\r\n      \tconsole.log(error);\r\n    \t})\r\n}\r\n\r\n  render() {\r\n  return (\r\n    <div>\r\n    <div class=\"SubHeader\">\r\n      <h2 class=\"Heading\">Register New User</h2>\r\n    </div>\r\n    <form class=\"Component\" onSubmit={this.handleSubmit}>\r\n      <div class=\"Field\">\r\n        <text class=\"Label\">Name: </text>\r\n        <input class=\"Input\" name='fname' placeholder=\"First Name\" onChange={this.handleChange}/>\r\n        <input class=\"Input\" name='sname' placeholder=\"Last Name\" onChange={this.handleChange}/>\r\n      </div>\r\n      <div class=\"Field\">\r\n        <text class=\"Label\">Phone Number: </text>\r\n        <input class=\"Input\" name=\"num\" onChange={this.handleChange}/>\r\n      </div>\r\n      <div class=\"Field\">\r\n        <text class=\"Label\">Email ID: </text>\r\n        <input class=\"Input\" name=\"eid\" onChange={this.handleChange}/>\r\n      </div>\r\n      <div class=\"Field\">\r\n        <text class=\"Label\">User Name: </text>\r\n        <input class=\"Input\" name=\"uid\" onChange={this.handleChange}/>\r\n      </div>\r\n      <div class=\"Field\">\r\n        <text class=\"Label\">Password: </text>\r\n        <input class=\"Input\" name=\"passwd\" onChange={this.handleChange}/>\r\n      </div>\r\n      <div class=\"Field\">\r\n        <button class=\"Button\">Register</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport './Styles/AddEvent.css';\r\nimport DatePicker from 'react-datepicker';\r\nimport axios from 'axios';\r\n// import moment from 'moment';\r\n\r\nclass AddEvent extends React.Component {\r\n\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        error: false,\r\n        startDate: new Date(),\r\n        Name: null,\r\n        time: null,\r\n        venue: null,\r\n        uid: null\r\n      }\r\n      //this.handleChange = this.handleChange.bind(this);\r\n    }\r\n  \r\n    handleChange=(event) => {\r\n        event.preventDefault();\r\n        const { name, value } = event.target;\r\n        console.log(name);\r\n        this.setState({[name]: value});\r\n    }\r\n    handleSubmit=(event) => {\r\n        event.preventDefault();\r\n        var opts={\r\n        \"name\":this.state.Name,\r\n        \"date\":this.state.date,\r\n        \"time\":this.state.time,\r\n        \"venue\":this.state.venue,\r\n        \"uid\":this.state.uid\r\n          };\r\n        console.log(opts);\r\n        axios.post('http://127.0.0.1:5000/addevent',opts)\r\n            .then(res => {\r\n              console.log(res);\r\n              console.log(res.data);\r\n        if(res.data.success==true)\r\n          window.location.replace('http://127.0.0.1:3000/Userhome')\r\n        else\r\n          this.setState({\r\n            error: true\r\n          })\r\n            }).catch(error => {\r\n              console.log(error);\r\n            })\r\n    }\r\n\t\r\n    render() {\r\n    return (\r\n        <div>\r\n            <div class=\"SubHeader\">\r\n              <h2 class=\"Heading\">Add New Event</h2>\r\n            </div>\r\n\r\n            <form class=\"Component\" onSubmit={this.handleSubmit} noValidate> \r\n\r\n                {/* <div class=\"Field\">\r\n                <text class=\"Label\" value=\"\">User Id: </text>\r\n                <input class='uid' name='uid'  onChange={this.handleChange} required/>\r\n                </div> */}\r\n\r\n                <div class=\"Field\">\r\n                <text class=\"Label\">Leave type: </text>\r\n                <input class=\"Input\" class='Name' name='Name'  onChange={this.handleChange} required/>\r\n                </div>\r\n \r\n                <div class=\"Field\">\r\n                <text class=\"Label\">Date: </text>\r\n                {/* <DatePicker \r\n                    id='date' name='date' required\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                    class=\"Input\"\r\n                    selected={this.state.startDate}\r\n                    onChange={this.handlChange}\r\n                /> */}\r\n                <input class=\"Input\" class='date' name='date' onChange={this.handleChange} required/>\r\n                </div>\r\n\r\n                <div class=\"Field\">\r\n                <text class=\"Label\">Time Slot: </text>\r\n                <input class=\"Input\" class='time' name='time' onChange={this.handleChange} required/>\r\n                </div>\r\n\r\n                <div class=\"Field\">\r\n                <text class=\"Label\">Reason for absence: </text>\r\n                <input class=\"Input\" class='venue' name='venue'  onChange={this.handleChange} required/>\r\n                </div>\r\n\r\n                <div class=\"Field\">\r\n                <button class=\"Button\" class=\"Submit\">Submit</button>\r\n                </div>\r\n                {this.state.error && <div class=\"Error\">The slot which you selected is not available. Please select a different date.</div>} \r\n\r\n            </form>\r\n        </div>\r\n    );\r\n    }\r\n  }\r\n\r\nexport default AddEvent;","import React from 'react';\nimport './Styles/Header.css';\n\nfunction Header() {\n    return (\n        <div class=\"Header\">\n            <h1 class=\"Heading\">OD/ML Management System</h1>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport Login from './Login';\nimport Register from './Register';\nimport AddEvent from './AddEvent';\nimport Userhome from './Userhome';\nimport Header from './Header';\nimport './Styles/App.css';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n\t\n\treturn (\n\t<div>\n\t\t<Header />\n\t\t<Router> \t\n\t\t\t<Route path=\"/Login\" component={Login} />\n\t\t\t<Route path=\"/Register\" component={Register} />\n\t\t\t<Route path=\"/AddEvent\" component={AddEvent} />\n\t\t\t<Route path=\"/Userhome\" component={Userhome} />\n\t\t</Router>     \n\t</div>  \n    // <Register />\n    //<AddEvent />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}